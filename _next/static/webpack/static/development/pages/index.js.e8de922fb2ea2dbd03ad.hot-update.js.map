{"version":3,"file":"static/webpack/static/development/pages/index.js.e8de922fb2ea2dbd03ad.hot-update.js","sources":["webpack:///./lib/components/MailChimpForm.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Alert,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText\n} from \"reactstrap\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport { Formik } from \"formik\";\n\nconst CustomForm = ({ status, message, onSubmit, ...props }) => {\n  const sending = status === \"sending\";\n  const error = status === \"error\";\n  const success = status === \"success\";\n\n  const alertColor = success ? 'success' : 'warning';\n\n  return (\n    <>\n      {message && <Alert color={alertColor}><div dangerouslySetInnerHTML={{__html: message}} /></Alert>}\n\n      <Formik\n        initialValues={{ EMAIL: \"\" }}\n        onSubmit={(values, _a) => onSubmit(values)}\n        render={props => (\n          <Form onSubmit={props.handleSubmit}>\n            <FormGroup>\n              <Input\n                placeholder=\"joe@example.com\"\n                type=\"email\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.EMAIL}\n                name=\"EMAIL\"\n              />\n            </FormGroup>\n\n            {props.errors.email && (\n              <div id=\"feedback\">{props.errors.email}</div>\n            )}\n\n            <Button disabled={sending} color=\"primary\" block type=\"submit\">\n              {sending ? 'Submitting...' : 'Subscribe'}\n            </Button>\n          </Form>\n        )}\n      />\n    </>\n  );\n};\n\nexport const MailChimpForm = props => {\n  const url =\n    \"https://twitter.us14.list-manage.com/subscribe/post?u=c995eaf6129ecf4b13d8ae469&id=dd2d98db0f\";\n\n  return (\n    <div>\n      <MailchimpSubscribe\n        url={url}\n        render={({ subscribe, status, message }) => (\n          <CustomForm\n            status={status}\n            message={message}\n            onSubmit={async formData => await subscribe(formData)}\n          />\n        )}\n      />\n    </div>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;A","sourceRoot":""}