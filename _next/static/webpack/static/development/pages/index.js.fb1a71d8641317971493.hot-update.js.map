{"version":3,"file":"static/webpack/static/development/pages/index.js.fb1a71d8641317971493.hot-update.js","sources":["webpack:///./lib/components/MailChimpForm.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Alert,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText\n} from \"reactstrap\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport { Formik } from \"formik\";\n\nconst validate = values => {\n  let errors = {};\n\n  if (!values.EMAIL) {\n    errors.EMAIL = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.EMAIL)) {\n    errors.EMAIL = \"Invalid email address\";\n  }\n\n  return errors;\n};\n\nconst CustomForm = ({ status, message, onSubmit, ...props }) => {\n  const sending = status === \"sending\";\n  const error = status === \"error\";\n  const success = status === \"success\";\n\n  const alertColor = success ? \"success\" : \"warning\";\n\n  return (\n    <>\n      {message && (\n        <Alert color={alertColor}>\n          <div dangerouslySetInnerHTML={{ __html: message }} />\n        </Alert>\n      )}\n\n      <Formik\n        initialValues={{ EMAIL: \"\" }}\n        onSubmit={(values, _a) => onSubmit(values)}\n        validate={validate}\n        render={props => (\n          <Form onSubmit={props.handleSubmit}>\n            <FormGroup>\n              <Input\n                placeholder=\"joe@example.com\"\n                type=\"email\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.EMAIL}\n                name=\"EMAIL\"\n              />\n              <FormText>\n                We will never sell your email. We hate that.\n              </FormText>\n\n              {props.errors.EMAIL && (\n                <FormText color=\"danger\">{props.errors.EMAIL}</FormText>\n              )}\n            </FormGroup>\n\n            <Button disabled={sending} color=\"primary\" block type=\"submit\">\n              {sending ? \"Submitting...\" : \"Subscribe\"}\n            </Button>\n          </Form>\n        )}\n      />\n    </>\n  );\n};\n\nexport const MailChimpForm = props => {\n  const url =\n    \"https://twitter.us14.list-manage.com/subscribe/post?u=c995eaf6129ecf4b13d8ae469&id=dd2d98db0f\";\n\n  return (\n    <div>\n      <MailchimpSubscribe\n        url={url}\n        render={({ subscribe, status, message }) => (\n          <CustomForm\n            status={status}\n            message={message}\n            onSubmit={async formData => await subscribe(formData)}\n          />\n        )}\n      />\n    </div>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;A","sourceRoot":""}